# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Hamlib bindings using SWIG
# more information on swig at http://www.swig.org
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

##########################################
# Perl binding
@ENABLE_PERL_TRUE@am__append_1 = hamlibperl_wrap.c
@ENABLE_PERL_TRUE@am__append_2 = hamlibperl_wrap.c Hamlib.pm Hamlib.bs Hamlib-pl.mk.old
@ENABLE_PERL_TRUE@am__append_3 = perltest.pl
@ENABLE_PYTHON_TRUE@am__append_4 = hamlibpy_wrap.c Hamlib.py *.pyc
@ENABLE_PYTHON_TRUE@am__append_5 = hamlibpy_wrap.c Hamlib.py
# PYVER_3
@ENABLE_PYTHON_TRUE@am__append_6 = $(pytest)

# Python

##########################################
# Tcl binding
@ENABLE_TCL_TRUE@am__append_7 = hamlibtcl_wrap.c
@ENABLE_TCL_TRUE@am__append_8 = hamlibtcl_wrap.c pkgIndex.tcl tcltest.tcl
@ENABLE_TCL_TRUE@am__append_9 = tcltest.tcl
@ENABLE_LUA_TRUE@am__append_10 = hamliblua_wrap.c
@ENABLE_LUA_TRUE@am__append_11 = hamliblua_wrap.c
@ENABLE_LUA_TRUE@am__append_12 = luatest.lua
subdir = bindings
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/ax_append_flag.m4 \
	$(top_srcdir)/macros/ax_cflags_warn_all.m4 \
	$(top_srcdir)/macros/ax_lib_indi.m4 \
	$(top_srcdir)/macros/ax_lib_nova.m4 \
	$(top_srcdir)/macros/ax_lib_readline.m4 \
	$(top_srcdir)/macros/ax_lua.m4 \
	$(top_srcdir)/macros/ax_pkg_swig.m4 \
	$(top_srcdir)/macros/ax_pthread.m4 \
	$(top_srcdir)/macros/ax_python_devel.m4 \
	$(top_srcdir)/macros/gr_pwin32.m4 \
	$(top_srcdir)/macros/hl_getaddrinfo.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/perl.m4 $(top_srcdir)/macros/pkg.m4 \
	$(top_srcdir)/macros/tcl.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(Hamliblua_ladir)" \
	"$(DESTDIR)$(_Hamlib_ladir)" "$(DESTDIR)$(hamlibtcl_ladir)" \
	"$(DESTDIR)$(pyexecdir)" "$(DESTDIR)$(exampledir)" \
	"$(DESTDIR)$(hamlibtcl_ladir)"
LTLIBRARIES = $(Hamliblua_la_LTLIBRARIES) $(_Hamlib_la_LTLIBRARIES) \
	$(hamlibtcl_la_LTLIBRARIES)
@ENABLE_LUA_TRUE@Hamliblua_la_DEPENDENCIES =  \
@ENABLE_LUA_TRUE@	$(top_builddir)/src/libhamlib.la
@ENABLE_LUA_TRUE@nodist_Hamliblua_la_OBJECTS =  \
@ENABLE_LUA_TRUE@	Hamliblua_la-hamliblua_wrap.lo
Hamliblua_la_OBJECTS = $(nodist_Hamliblua_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
Hamliblua_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(Hamliblua_la_LDFLAGS) $(LDFLAGS) -o $@
@ENABLE_LUA_TRUE@am_Hamliblua_la_rpath = -rpath $(Hamliblua_ladir)
am__DEPENDENCIES_1 =
@ENABLE_PYTHON_TRUE@_Hamlib_la_DEPENDENCIES =  \
@ENABLE_PYTHON_TRUE@	$(top_builddir)/src/libhamlib.la \
@ENABLE_PYTHON_TRUE@	$(am__DEPENDENCIES_1)
@ENABLE_PYTHON_TRUE@nodist__Hamlib_la_OBJECTS = hamlibpy_wrap.lo
_Hamlib_la_OBJECTS = $(nodist__Hamlib_la_OBJECTS)
_Hamlib_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(_Hamlib_la_LDFLAGS) $(LDFLAGS) -o $@
@ENABLE_PYTHON_TRUE@am__Hamlib_la_rpath = -rpath $(_Hamlib_ladir)
@ENABLE_TCL_TRUE@hamlibtcl_la_DEPENDENCIES =  \
@ENABLE_TCL_TRUE@	$(top_builddir)/src/libhamlib.la \
@ENABLE_TCL_TRUE@	$(am__DEPENDENCIES_1)
@ENABLE_TCL_TRUE@nodist_hamlibtcl_la_OBJECTS = hamlibtcl_wrap.lo
hamlibtcl_la_OBJECTS = $(nodist_hamlibtcl_la_OBJECTS)
hamlibtcl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(hamlibtcl_la_LDFLAGS) $(LDFLAGS) -o $@
@ENABLE_TCL_TRUE@am_hamlibtcl_la_rpath = -rpath $(hamlibtcl_ladir)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo \
	./$(DEPDIR)/hamlibpy_wrap.Plo ./$(DEPDIR)/hamlibtcl_wrap.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_Hamliblua_la_SOURCES) $(nodist__Hamlib_la_SOURCES) \
	$(nodist_hamlibtcl_la_SOURCES)
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pep3147_tweak = \
  sed -e 's|\.py$$||' -e 's|[^/]*$$|__pycache__/&.*.pyc __pycache__/&.*.pyo|'
py_compile = $(top_srcdir)/build-aux/py-compile
DATA = $(example_DATA) $(hamlibtcl_la_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/py-compile
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI_AGE = @ABI_AGE@
ABI_REVISION = @ABI_REVISION@
ABI_VERSION = @ABI_VERSION@
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMP_BACKENDEPS = @AMP_BACKENDEPS@
AMP_BACKEND_LIST = @AMP_BACKEND_LIST@
AMTAR = @AMTAR@
AM_CFLAGS = -fno-strict-aliasing
AM_CPPFLAGS = @AM_CPPFLAGS@ -I$(top_srcdir)/include -I$(top_srcdir)/bindings  \
	$(TCL_INCLUDE_SPEC) $(PYTHON_CPPFLAGS)

AM_CXXFLAGS = -O2
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDINGS = @BINDINGS@
BINDING_ALL = @BINDING_ALL@
BINDING_CHECK = @BINDING_CHECK@
BINDING_CLEAN = @BINDING_CLEAN@
BINDING_DISTCHECK = @BINDING_DISTCHECK@
BINDING_DISTCLEAN = @BINDING_DISTCLEAN@
BINDING_INSTALL_EXEC = @BINDING_INSTALL_EXEC@
BINDING_LIB_TARGETS = @BINDING_LIB_TARGETS@
BINDING_LIST = @BINDING_LIST@
BINDING_UNINSTALL = @BINDING_UNINSTALL@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DL_LIBS = @DL_LIBS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INDI_LIBS = @INDI_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUSB = @LIBUSB@
LIBUSB_CFLAGS = @LIBUSB_CFLAGS@
LIBUSB_LIBS = @LIBUSB_LIBS@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
LUA = @LUA@
LUA_EXEC_PREFIX = @LUA_EXEC_PREFIX@
LUA_INCLUDE = @LUA_INCLUDE@
LUA_LIB = @LUA_LIB@
LUA_PLATFORM = @LUA_PLATFORM@
LUA_PREFIX = @LUA_PREFIX@
LUA_SHORT_VERSION = @LUA_SHORT_VERSION@
LUA_VERSION = @LUA_VERSION@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MATH_LIBS = @MATH_LIBS@
MKDIR_P = @MKDIR_P@
NET_LIBS = @NET_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NOVA_LIBS = @NOVA_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSXLDFLAGS = @OSXLDFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_INC_DIR = @PERL_INC_DIR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
RIG_BACKENDEPS = @RIG_BACKENDEPS@
RIG_BACKEND_LIST = @RIG_BACKEND_LIST@
ROT_BACKENDEPS = @ROT_BACKENDEPS@
ROT_BACKEND_LIST = @ROT_BACKEND_LIST@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TCL_BIN_DIR = @TCL_BIN_DIR@
TCL_INCLUDE_SPEC = @TCL_INCLUDE_SPEC@
TCL_LIB_FILE = @TCL_LIB_FILE@
TCL_LIB_SPEC = @TCL_LIB_SPEC@
TCL_SHLIB_SUFFIX = @TCL_SHLIB_SUFFIX@
TCL_SRC_DIR = @TCL_SRC_DIR@
TCL_VERSION = @TCL_VERSION@
USRP_CFLAGS = @USRP_CFLAGS@
USRP_LIBS = @USRP_LIBS@
VERSION = @VERSION@
WINEXELDFLAGS = @WINEXELDFLAGS@
WINLDFLAGS = @WINLDFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cf_with_cxx = @cf_with_cxx@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
luadir = @luadir@
luaexecdir = @luaexecdir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgluadir = @pkgluadir@
pkgluaexecdir = @pkgluaexecdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SWGFILES = hamlib.swg ignore.swg rig.swg rotator.swg amplifier.swg
SWGDEP = \
	$(top_srcdir)/include/hamlib/rig.h \
	$(top_srcdir)/include/hamlib/riglist.h \
	$(top_srcdir)/include/hamlib/rotator.h \
	$(top_srcdir)/include/hamlib/rotlist.h \
	$(top_srcdir)/include/hamlib/amplifier.h \
	$(top_srcdir)/include/hamlib/amplist.h \
	$(SWGFILES)

EXTRA_DIST = $(SWGFILES) \
	Makefile.PL perltest.pl tcltest.tcl.in pytest.py py3test.py \
	luatest.lua README.python

exampledir = $(docdir)/examples
example_DATA = $(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_12)
BUILT_SOURCES = $(am__append_1) $(am__append_5) $(am__append_7) \
	$(am__append_11)
MOSTLYCLEANFILES = $(am__append_2) $(am__append_4) $(am__append_8) \
	$(am__append_10)

# Perl

##########################################
# Python binding
@ENABLE_PYTHON_TRUE@pyexec_ltlib = _Hamlib.la
@ENABLE_PYTHON_TRUE@@PYVER_3_FALSE@pytest = pytest.py

# Set by AM_CONDITIONAL in configure.ac
@ENABLE_PYTHON_TRUE@@PYVER_3_TRUE@pytest = py3test.py
@ENABLE_PYTHON_TRUE@nodist_pyexec_PYTHON = Hamlib.py
@ENABLE_PYTHON_TRUE@nodist__Hamlib_la_SOURCES = hamlibpy_wrap.c
@ENABLE_PYTHON_TRUE@_Hamlib_la_LDFLAGS = -no-undefined -module -avoid-version
@ENABLE_PYTHON_TRUE@_Hamlib_la_LIBADD = $(top_builddir)/src/libhamlib.la $(PYTHON_LIBS)
@ENABLE_PYTHON_TRUE@_Hamlib_ladir = $(pyexecdir)
@ENABLE_PYTHON_TRUE@_Hamlib_la_LTLIBRARIES = $(pyexec_ltlib)
@ENABLE_TCL_TRUE@tcl_ltlib = hamlibtcl.la
@ENABLE_TCL_TRUE@tcldir = $(libdir)/tcl$(TCL_VERSION)/Hamlib
@ENABLE_TCL_TRUE@PKG_VER = $(ABI_VERSION).$(ABI_REVISION)
@ENABLE_TCL_TRUE@DLL = hamlibtcl-$(PKG_VER)$(TCL_SHLIB_SUFFIX)
@ENABLE_TCL_TRUE@nodist_hamlibtcl_la_SOURCES = hamlibtcl_wrap.c
@ENABLE_TCL_TRUE@hamlibtcl_la_LDFLAGS = -no-undefined -module -release $(PKG_VER) -avoid-version
@ENABLE_TCL_TRUE@hamlibtcl_la_LIBADD = $(top_builddir)/src/libhamlib.la $(TCL_LIB_SPEC)
@ENABLE_TCL_TRUE@hamlibtcl_ladir = $(tcldir)
@ENABLE_TCL_TRUE@hamlibtcl_la_DATA = pkgIndex.tcl

# Install hamlibtcl.la into the $(tcldir)/Hamlib directory
# set by $(hamlibtcl_ladir)
@ENABLE_TCL_TRUE@hamlibtcl_la_LTLIBRARIES = $(tcl_ltlib)
@ENABLE_TCL_TRUE@do_subst = sed -e 's,[@]tcldir[@],$(tcldir),g'

# TCL

##########################################
# Lua binding
@ENABLE_LUA_TRUE@luaexec_ltlib = Hamliblua.la
@ENABLE_LUA_TRUE@nodist_luaexec_LUA = Hamlib.lua
@ENABLE_LUA_TRUE@nodist_Hamliblua_la_SOURCES = hamliblua_wrap.c
@ENABLE_LUA_TRUE@Hamliblua_la_CPPFLAGS = $(LUA_INCLUDE) -I$(top_srcdir)/include -I$(top_srcdir)/src
@ENABLE_LUA_TRUE@Hamliblua_la_LDFLAGS = -no-undefined -module -avoid-version
@ENABLE_LUA_TRUE@Hamliblua_la_LIBADD = $(top_builddir)/src/libhamlib.la
@ENABLE_LUA_TRUE@Hamliblua_ladir = $(luaexecdir)
@ENABLE_LUA_TRUE@Hamliblua_la_LTLIBRARIES = $(luaexec_ltlib)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu bindings/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu bindings/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-Hamliblua_laLTLIBRARIES: $(Hamliblua_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(Hamliblua_la_LTLIBRARIES)'; test -n "$(Hamliblua_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Hamliblua_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Hamliblua_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(Hamliblua_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(Hamliblua_ladir)"; \
	}

uninstall-Hamliblua_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(Hamliblua_la_LTLIBRARIES)'; test -n "$(Hamliblua_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(Hamliblua_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(Hamliblua_ladir)/$$f"; \
	done

clean-Hamliblua_laLTLIBRARIES:
	-test -z "$(Hamliblua_la_LTLIBRARIES)" || rm -f $(Hamliblua_la_LTLIBRARIES)
	@list='$(Hamliblua_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-_Hamlib_laLTLIBRARIES: $(_Hamlib_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(_Hamlib_la_LTLIBRARIES)'; test -n "$(_Hamlib_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(_Hamlib_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(_Hamlib_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(_Hamlib_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(_Hamlib_ladir)"; \
	}

uninstall-_Hamlib_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(_Hamlib_la_LTLIBRARIES)'; test -n "$(_Hamlib_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(_Hamlib_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(_Hamlib_ladir)/$$f"; \
	done

clean-_Hamlib_laLTLIBRARIES:
	-test -z "$(_Hamlib_la_LTLIBRARIES)" || rm -f $(_Hamlib_la_LTLIBRARIES)
	@list='$(_Hamlib_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-hamlibtcl_laLTLIBRARIES: $(hamlibtcl_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; test -n "$(hamlibtcl_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hamlibtcl_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(hamlibtcl_ladir)"; \
	}

uninstall-hamlibtcl_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; test -n "$(hamlibtcl_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(hamlibtcl_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(hamlibtcl_ladir)/$$f"; \
	done

clean-hamlibtcl_laLTLIBRARIES:
	-test -z "$(hamlibtcl_la_LTLIBRARIES)" || rm -f $(hamlibtcl_la_LTLIBRARIES)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

Hamliblua.la: $(Hamliblua_la_OBJECTS) $(Hamliblua_la_DEPENDENCIES) $(EXTRA_Hamliblua_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(Hamliblua_la_LINK) $(am_Hamliblua_la_rpath) $(Hamliblua_la_OBJECTS) $(Hamliblua_la_LIBADD) $(LIBS)

_Hamlib.la: $(_Hamlib_la_OBJECTS) $(_Hamlib_la_DEPENDENCIES) $(EXTRA__Hamlib_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(_Hamlib_la_LINK) $(am__Hamlib_la_rpath) $(_Hamlib_la_OBJECTS) $(_Hamlib_la_LIBADD) $(LIBS)

hamlibtcl.la: $(hamlibtcl_la_OBJECTS) $(hamlibtcl_la_DEPENDENCIES) $(EXTRA_hamlibtcl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hamlibtcl_la_LINK) $(am_hamlibtcl_la_rpath) $(hamlibtcl_la_OBJECTS) $(hamlibtcl_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hamlibpy_wrap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hamlibtcl_wrap.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

Hamliblua_la-hamliblua_wrap.lo: hamliblua_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Hamliblua_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Hamliblua_la-hamliblua_wrap.lo -MD -MP -MF $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Tpo -c -o Hamliblua_la-hamliblua_wrap.lo `test -f 'hamliblua_wrap.c' || echo '$(srcdir)/'`hamliblua_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Tpo $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='hamliblua_wrap.c' object='Hamliblua_la-hamliblua_wrap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Hamliblua_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Hamliblua_la-hamliblua_wrap.lo `test -f 'hamliblua_wrap.c' || echo '$(srcdir)/'`hamliblua_wrap.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_pyexecPYTHON: $(nodist_pyexec_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pyexec_PYTHON)'; dlist=; list2=; test -n "$(pyexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pyexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pyexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pyexecdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pyexecdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pyexecdir)" $$dlist; \
	else :; fi

uninstall-nodist_pyexecPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pyexec_PYTHON)'; test -n "$(pyexecdir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(pyexecdir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$py_files" "$$pyc_files" "$$pyo_files"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	dir='$(DESTDIR)$(pyexecdir)'; \
	echo "$$py_files" | $(am__pep3147_tweak) | $(am__base_list) | \
	  while read files; do \
	    $(am__uninstall_files_from_dir) || st=$$?; \
	  done || exit $$?; \
	exit $$st
install-exampleDATA: $(example_DATA)
	@$(NORMAL_INSTALL)
	@list='$(example_DATA)'; test -n "$(exampledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(exampledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(exampledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(exampledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(exampledir)" || exit $$?; \
	done

uninstall-exampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(example_DATA)'; test -n "$(exampledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(exampledir)'; $(am__uninstall_files_from_dir)
install-hamlibtcl_laDATA: $(hamlibtcl_la_DATA)
	@$(NORMAL_INSTALL)
	@list='$(hamlibtcl_la_DATA)'; test -n "$(hamlibtcl_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hamlibtcl_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hamlibtcl_ladir)" || exit $$?; \
	done

uninstall-hamlibtcl_laDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hamlibtcl_la_DATA)'; test -n "$(hamlibtcl_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hamlibtcl_ladir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) all-local
installdirs:
	for dir in "$(DESTDIR)$(Hamliblua_ladir)" "$(DESTDIR)$(_Hamlib_ladir)" "$(DESTDIR)$(hamlibtcl_ladir)" "$(DESTDIR)$(pyexecdir)" "$(DESTDIR)$(exampledir)" "$(DESTDIR)$(hamlibtcl_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-Hamliblua_laLTLIBRARIES clean-_Hamlib_laLTLIBRARIES \
	clean-generic clean-hamlibtcl_laLTLIBRARIES clean-libtool \
	clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibpy_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibtcl_wrap.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-Hamliblua_laLTLIBRARIES \
	install-_Hamlib_laLTLIBRARIES install-exampleDATA \
	install-hamlibtcl_laDATA install-hamlibtcl_laLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local install-nodist_pyexecPYTHON

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibpy_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibtcl_wrap.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-Hamliblua_laLTLIBRARIES \
	uninstall-_Hamlib_laLTLIBRARIES uninstall-exampleDATA \
	uninstall-hamlibtcl_laDATA uninstall-hamlibtcl_laLTLIBRARIES \
	uninstall-local uninstall-nodist_pyexecPYTHON

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles check \
	check-am check-local clean clean-Hamliblua_laLTLIBRARIES \
	clean-_Hamlib_laLTLIBRARIES clean-generic \
	clean-hamlibtcl_laLTLIBRARIES clean-libtool clean-local \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-Hamliblua_laLTLIBRARIES \
	install-_Hamlib_laLTLIBRARIES install-am install-data \
	install-data-am install-dvi install-dvi-am install-exampleDATA \
	install-exec install-exec-am install-exec-local \
	install-hamlibtcl_laDATA install-hamlibtcl_laLTLIBRARIES \
	install-html install-html-am install-info install-info-am \
	install-man install-nodist_pyexecPYTHON install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-Hamliblua_laLTLIBRARIES \
	uninstall-_Hamlib_laLTLIBRARIES uninstall-am \
	uninstall-exampleDATA uninstall-hamlibtcl_laDATA \
	uninstall-hamlibtcl_laLTLIBRARIES uninstall-local \
	uninstall-nodist_pyexecPYTHON

.PRECIOUS: Makefile


@ENABLE_PERL_TRUE@hamlibperl_wrap.c: hamlib.swg $(SWIGDEP)
@ENABLE_PERL_TRUE@	$(AM_V_GEN)$(SWIG) -perl5 -shadow $(AM_CPPFLAGS) -I$(top_srcdir)/bindings \
@ENABLE_PERL_TRUE@		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

@ENABLE_PERL_TRUE@Hamlib-pl.mk: $(srcdir)/Makefile.PL
@ENABLE_PERL_TRUE@	$(AM_V_at)test -f Makefile.PL || $(LN_S) $(srcdir)/Makefile.PL Makefile.PL
@ENABLE_PERL_TRUE@	$(AM_V_at)perl $$(test -f Makefile.PL || echo '$(srcdir)/')Makefile.PL \
@ENABLE_PERL_TRUE@			MAKEFILE="Hamlib-pl.mk" \
@ENABLE_PERL_TRUE@			PREFIX="$(prefix)" \
@ENABLE_PERL_TRUE@			INC="$(AM_CPPFLAGS)"  \
@ENABLE_PERL_TRUE@			CC="$(CC)"  \
@ENABLE_PERL_TRUE@			OBJECT="hamlibperl_wrap.o" \
@ENABLE_PERL_TRUE@			VERSION="$(PACKAGE_VERSION)" \
@ENABLE_PERL_TRUE@			LIBS="-L$(top_builddir)/src/.libs -lhamlib"
@ENABLE_PERL_TRUE@	$(AM_V_at)sed -e 's/^LD_RUN_PATH.*/LD_RUN_PATH =/' Hamlib-pl.mk > Hamlib-pl-norpath.mk
@ENABLE_PERL_TRUE@	$(AM_V_at)mv Hamlib-pl-norpath.mk Hamlib-pl.mk

@ENABLE_PERL_TRUE@all-perl: Hamlib-pl.mk hamlibperl_wrap.c
@ENABLE_PERL_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk all

@ENABLE_PERL_TRUE@check-perl: all-perl
@ENABLE_PERL_TRUE@	$(AM_V_at)LD_LIBRARY_PATH=$(top_builddir)/src/.libs perl $(top_srcdir)/bindings/perltest.pl

@ENABLE_PERL_TRUE@clean-perl: Hamlib-pl.mk
@ENABLE_PERL_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk clean

@ENABLE_PERL_TRUE@distclean-perl: ## Hamlib-pl.mk

@ENABLE_PERL_TRUE@distcheck-perl: Hamlib-pl.mk
@ENABLE_PERL_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk distcheck

@ENABLE_PERL_TRUE@install-perl: Hamlib-pl.mk
@ENABLE_PERL_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk install_site

@ENABLE_PERL_TRUE@uninstall-perl: ## Hamlib-pl.mk

@ENABLE_PYTHON_TRUE@all-py: $(pyexec_ltlib)

@ENABLE_PYTHON_TRUE@check-py: all-py
@ENABLE_PYTHON_TRUE@	$(AM_V_at)PYTHONPATH=$(builddir):$(builddir)/.libs \
@ENABLE_PYTHON_TRUE@		$(PYTHON) $(srcdir)/$(pytest) \
@ENABLE_PYTHON_TRUE@		|| echo "Python test failed" 1>&2

@ENABLE_PYTHON_TRUE@Hamlib.py: hamlibpy_wrap.c

@ENABLE_PYTHON_TRUE@hamlibpy_wrap.c: hamlib.swg $(SWGDEP)
@ENABLE_PYTHON_TRUE@	$(AM_V_GEN)$(SWIG) -python $(AM_CPPFLAGS) $(PYTHON_CPPFLAGS) -I$(top_srcdir)/bindings \
@ENABLE_PYTHON_TRUE@		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

@ENABLE_PYTHON_TRUE@install-py:
@ENABLE_PYTHON_TRUE@clean-py:
@ENABLE_PYTHON_TRUE@distclean-py:
@ENABLE_PYTHON_TRUE@uninstall-py:

# Having the first occurrence of 'hamlib' capitalized seemed to cause confusion
# for the TCL interpreter loading the Hamlib module.
@ENABLE_TCL_TRUE@pkgIndex.tcl: Makefile
@ENABLE_TCL_TRUE@	$(AM_V_at)echo 'package ifneeded hamlib $(PKG_VER) [list load [file join $$dir $(DLL)] Hamlib]' > pkgIndex.tcl

@ENABLE_TCL_TRUE@hamlibtcl_wrap.c: hamlib.swg $(SWGDEP)
@ENABLE_TCL_TRUE@	$(AM_V_GEN)$(SWIG) -tcl -pkgversion $(PKG_VER) $(AM_CPPFLAGS) \
@ENABLE_TCL_TRUE@		-I$(top_srcdir)/bindings \
@ENABLE_TCL_TRUE@		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

@ENABLE_TCL_TRUE@tcltest.tcl: tcltest.tcl.in Makefile
@ENABLE_TCL_TRUE@	$(AM_V_GEN)$(do_subst) < $(srcdir)/tcltest.tcl.in > tcltest.tcl

@ENABLE_TCL_TRUE@all-tcl: pkgIndex.tcl $(tcl_ltlib) tcltest.tcl

@ENABLE_TCL_TRUE@check-tcl: all-tcl
@ENABLE_TCL_TRUE@	$(AM_V_at)cp $(builddir)/pkgIndex.tcl $(builddir)/.libs
@ENABLE_TCL_TRUE@	$(AM_V_at)TCLLIBPATH=$(builddir)/.libs tclsh $(builddir)/tcltest.tcl \
@ENABLE_TCL_TRUE@		|| echo "Tcl test failed" 1>&2
@ENABLE_TCL_TRUE@	$(AM_V_at)rm -f $(builddir)/.libs/pkgIndex.tcl

@ENABLE_TCL_TRUE@install-tcl:
@ENABLE_TCL_TRUE@clean-tcl:
@ENABLE_TCL_TRUE@distclean-tcl: clean-tcl
@ENABLE_TCL_TRUE@uninstall-tcl:

@ENABLE_LUA_TRUE@all-lua: $(luaexec_ltlib)

@ENABLE_LUA_TRUE@check-lua: all-lua
@ENABLE_LUA_TRUE@	$(AM_V_at)LUA_CPATH="$(abs_builddir)/.libs/?.so" $(LUA) $(srcdir)/luatest.lua \
@ENABLE_LUA_TRUE@		|| echo "Lua test failed" 1>&2

@ENABLE_LUA_TRUE@Hamlib.lua: hamliblua_wrap.c

@ENABLE_LUA_TRUE@hamliblua_wrap.c: hamlib.swg $(SWGDEP)
@ENABLE_LUA_TRUE@	$(AM_V_GEN)$(SWIG) -lua $(AM_CPPFLAGS) -I$(top_srcdir)/bindings \
@ENABLE_LUA_TRUE@		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

@ENABLE_LUA_TRUE@install-lua:
@ENABLE_LUA_TRUE@clean-lua:
@ENABLE_LUA_TRUE@distclean-lua:
@ENABLE_LUA_TRUE@uninstall-lua:

# Lua

all-local: @BINDING_ALL@

check-local: @BINDING_CHECK@
clean-local: @BINDING_CLEAN@
distclean-local: @BINDING_DISTCLEAN@
distcheck-local: @BINDING_DISTCHECK@
install-exec-local: @BINDING_INSTALL_EXEC@
uninstall-local: @BINDING_UNINSTALL@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
